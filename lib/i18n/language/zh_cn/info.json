{
    "config": {
        "info_help_short": "设置SmartIDE配置信息",
        "info_help_long": "设置SmartIDE配置信息",
        "info_set_config_success": "参数设置成功",
        "err_read_config": "获取配置文件错误",
        "err_set_config": "参数设置异常",
        "info_read_docker_compose": "读取 docker-compose 文件：%v",
        "err_services_not_exit": "配置文件中不存在 services 节点 ",
        "err_file_not_exit": "%v 配置文件不存在",
        "err_devcontainer_not_contains": "dev-container 节点中定义的 “%s” 未出现在 services",
        "err_gitconfig_not_exit": "未获取到用户本地的GitConfig配置信息"
    },
    "main": {
        "info_help_short": "SmartIDE - 开发从未如此简单！",
        "info_help_long": "SmartIDE - 开发从未如此简单！\n- SmartIDE 可以帮助开发人员快速搭建开发环境，包括本地以及云端环境。",
        "info_usage_template": "使用:{{if .Runnable}}\n  {{.UseLine}}{{end}}{{if .HasAvailableSubCommands}}\n  {{.CommandPath}} [command]{{end}}{{if gt (len .Aliases) 0}}\nAliases:\n  {{.NameAndAliases}}{{end}}{{if .HasExample}}\n示例:\n{{.Example}}{{end}}{{if .HasAvailableSubCommands}}\n命令:{{range .Commands}}{{if (or .IsAvailableCommand (eq .Name \"help\"))}}\n  {{rpad .Name .NamePadding }} {{.Short}}{{end}}{{end}}{{end}}{{if .HasAvailableLocalFlags}}\n标记:\n{{.LocalFlags.FlagUsages | trimTrailingWhitespaces}}{{end}}{{if .HasAvailableInheritedFlags}}\nGlobal Flags:\n{{.InheritedFlags.FlagUsages | trimTrailingWhitespaces}}{{end}}{{if .HasHelpSubCommands}}\nAdditional help topics:{{range .Commands}}{{if .IsAdditionalHelpTopicCommand}}\n  {{rpad .CommandPath .CommandPathPadding}} {{.Short}}{{end}}{{end}}{{end}}{{if .HasAvailableSubCommands}}\n使用 \"{{.CommandPath}} [command] --help\" 可以看到命令的详细帮助信息.{{end}}\n",
        "info_help_flag_debug": "是否开启Debug模式，在该模式下将显示更多的日志信息",
        "info_workspace_loading": "读取工作区信息 ...",
        "info_ssh_connect_check": "检查ssh连接是否正常 %v:%v ...",
        "err_file_not_exit": "配置文件不存在，请创建 SmartIDE 配置文件 “.ide/.ide.yaml” ！",
        "err_file_not_exit2": "配置文件 '（%v）' 不存在！",
        "err_version_not_build": "请通过流水线生成版本号！",
        "err_flag_value_invalid": "'%v' 已设置，当前参数 '%v' 无效",
        "err_flag_value_invalid2": "当前目录下不需要录入 'WorkspaceId'",
        "err_flag_value_required": "'%v' 参数是必填项",
        "err_workspace_none": "查找不到对应的 Workspace 信息"
    },
    "start": {
        "info_help_short": "快速创建并启动SmartIDE开发环境",
        "info_help_long": "快速创建并启动SmartIDE开发环境",
        "info_start": "SmartIDE启动中 ...",
        "info_help_flag_host": "可以指定 host 的 IP地址、域名，或者 hostId",
        "info_help_flag_port": "SSH 端口，默认为22",
        "info_help_flag_username": "SSH 登录用户名",
        "info_help_flag_pasword": "SSH 登录用户密码",
        "info_help_flag_repourl": "Git代码仓库的克隆地址 (http/https/SSH)",
        "info_help_flag_branch": "指定Git分支",
        "info_help_flag_filepath": "请指定yaml文件路径",
        "info_running_container": "[Docker] 容器创建中 ...",
        "info_running_openbrower": "[WebIDE] 打开浏览器 ...",
        "info_end": "[WebIDE] SmartIDE启动完毕.",
        "info_docker_compose_filepath": "[Docker-Compose] 加载配置文件: %v",
        "info_ssh_tunnel": "[SSH] 转发端口：%v",
        "info_create_network": "[Docker] 创建网络 %v",
        "info_open_in_brower": "[WebIDE] 使用浏览器打开此地址即可访问 WebIDE : ",
        "info_workspace_saving": "[Workspace] 保存工作区(Workspace)信息 ...",
        "info_workspace_saved": "[Workspace] 保存成功，可以通过 WorkspaceId（smartide start %v）直接再次启动此工作区。",
        "err_docker": "请检查当前环境是否安装了 Docker",
        "err_dockerps": "请检查当前环境的 Docker 是否正在运行",
        "err_docker_compose": "请检查当前环境 Docker-Compose 是否正常运行",
        "warn_docker_container_started": "容器已经启动！",
        "err_docker_compose_save": "在临时文件夹中保存 Docker-Compose 文件出错 : "
    },
    "list": {
        "info_help_short": "获取已保存的工作区(Workspace)列表",
        "info_help_long": "获取已保存的工作区(Workspace)列表",
        "info_start": "查询中 ...",
        "info_end": "查询结束",
        "info_dal_none": "没有查询到工作区(Workspace)数据！",
        "info_workspace_list_header": "Id\tName\tMode\tWorking Dir\tConfig File\tHost\tCreate time"
    },
    "get": {
        "info_help_short": "获取工作区(Workspace)详情",
        "info_help_long": "获取工作区(Workspace)详情",
        "info_help_flag_workspaceid": "使用此Id直接启动 SmartIDE 环境 (smartide start <id>)",
        "info_workspace_detail_template": "工作区信息\nId:\t%v\n名称：\t%v\n模式：\t%v\n配置文件：\t%v\n工作目录：\t%v\nGit库地址：\t%v\nGit库验证方式：\t%v\n",
        "info_workspace_host_detail_template": "远程主机信息\n主机ID:\t%v\n地址：\t%v\n验证模式：\t%v\n",
        "Warn_flag_workspaceid_none": "参数 workspaceId 为空！"
    },
    "stop": {
        "info_help_short": "停止SmartIDE开发环境",
        "info_help_long": "停止SmartIDE开发环境",
        "info_start": "SmartIDE停止中 ...",
        "info_end": "SmartIDE已停止",
        "info_help_flag_filepath": "指定yaml文件路径",
        "info_sshremote_connection_creating": "创建远程连接... ",
        "info_docker_stopping": "停止容器... "
    },
    "remove": {
        "info_help_short": "删除SmartIDE工作区",
        "info_help_long": "删除SmartIDE工作区",
        "info_start": "SmartIDE工作区删除中 ...",
        "info_end": "SmartIDE工作区删除完毕",
        "info_is_confirm_remove": "是否确认删除？（y｜n）",
        "info_flag_workspaceid": "使用此Id指定需要删除的工作区",
        "info_flag_yes": "强制删除",
        "info_sshremote_connection_creating": "创建远程连接... ",
        "info_docker_removing": "删除容器... ",
        "info_project_dir_removing": "删除项目文件夹... ",
        "info_flag_force": "强制删除远程服务器上的文件夹",
        "err_workspace_not_exit": "当前目录没有对应的工作区信息！"
    },
    "new": {
        "info_help_short": "新建SmartIDE工作区",
        "info_help_long": "新建SmartIDE工作区",
        "info_help_info": "SmartIDE工作区模板",
        "info_help_info_operation": "选项：",
        "info_help_flag_type": "类型",
        "info_help_flag_projectFolder": "输出文件夹",
        "info_yaml_exist": "当前文件夹中已经存在 .ide.yaml 文件",
        "info_noempty_is_comfirm": "当前文件夹不为空，是否继续创建（y/n）？当前文件夹内数据将被重置。",
        "info_type_no_exist": "模版不存在",
        "info_creating_project": "正在初始化项目 ...",
        "info_loading_templates": "正在获取模板 ...",
        "info_templates_list_header": "TemplateType\tTypeName",
        "err_read_templates": "获取模板错误"
    },
    "help": {
        "info_help_short": "输出 SmartIDE 帮助信息",
        "info_help_long": "使用此命令获取帮助信息"
    },
    "version": {
        "info_help_short": "查看版本信息",
        "info_help_long": "查看版本信息",
        "info_template": "版本号: %v\n构建号: %v\n提交记录: %v\n发行商: %v"
    },
    "vm_start": {
        "info_starting": "远程主机模式启动中 ...",
        "info_connect_remote": "连接远程主机 ",
        "info_git_clone": "[Git] 克隆代码库 ...",
        "info_git_checkout_and_pull": "执行 git checkout && git pull ",
        "info_read_config": "读取代码库下的配置文件 '%v' ...",
        "info_create_network": "[Docker] 创建网络 ...",
        "info_compose_up": "[Docker-Compose] 运行 docker-compose up ...",
        "info_warting_for_webide": "[WebIDE] 等待 WebIDE 启动 ...",
        "info_open_brower": "[WebIDE] 打开浏览器访问WebIDE : %v ",
        "info_git_cloned": "[Git]当前工作区中已经完成代码克隆，不再执行 git checkout。"
    },
    "update": {
        "info_help_short": "自动升级 或者 更新到指定的版本",
        "info_help_long": "自动升级 或者 更新到指定的版本",
        "info_remove_repeat": "本地删除重复文件",
        "info_help_flag_version": "更新到指定的版本",
        "info_help_flag_build": "是否更新build版本",
        "warn_rel_lastest": "当前版本 %v 无须升级"
    },
    "host": {
        "info_help_short": "远程主机信息",
        "info_help_long": "远程主机信息",
        "info_help_get_short": "获取远程主机详情",
        "info_help_get_long": "获取远程主机详情",
        "info_help_list_short": "获取远程主机列表",
        "info_help_list_long": "获取远程主机列表",
        "info_help_flag_hostid": "远程主机Id",
        "info_host_table_header": "Id\tHost\tPort\tCrete Time",
        "info_host_detail_template": "      Id：\t%v\n地    址：\t%v\n验证模式：\t%v\n用    户：\t%v\n创建时间：\t%v\n",
        "err_host_data_not_exit": "没有查找到关联的远程主机信息"
    },
    "common": {
        "debug_key_public": "本地公钥: ",
        "debug_same_not_overwrite": "SSH 私钥相同，不需要覆盖！",
        "debug_auto_connect_gitrepo": "自动确定连接 Git 库",
        "debug_empty_error": "SSH 执行 command 遇到空错误(error、output均为空)，已跳过！",
        "info_privatekey_is_overwrite": "SSH 私钥文件已存在，是否覆盖？[y|n]",
        "info_whether_overwrite": "当前指定使用 SSH Git Url 方式，SmartIDE可以将本地 SSH Key 复制到远程主机以便简化操作，是否复制？[y|n]",
        "info_gitrepo_cloned": "Git库已克隆！",
        "info_gitrepo_clone_done": "[Git] Git 代码库克隆完成。",
        "info_please_enter_password": "请输入当前 Git 库的访问密码: ",
        "info_canel_privatekey_password": "当前指定使用 SSH Git Url 方式，请录入 SSH 私钥密码：",
        "info_ssh_rsa_cancel_pwd_successed": "当前指定使用 SSH Git Url 方式，私钥免密成功！",
        "info_port_is_binding": "[端口转发] 端口 %v 已绑定，可以直接使用",
        "info_port_binding_result2": "[端口转发] 容器: %v -> localhost:%v  ( %v 被占用)",
        "info_port_binding_result": "[端口转发] 容器: %v -> localhost:%v  ",
        "info_find_new_port": "[端口转发] 发现新端口：",
        "info_ssh_webide_host_port": "[端口转发] WebIDE 绑定端口：%v",
        "info_ssh_host_port": "[端口转发] SSH 绑定端口：%v",
        "err_sshremote_param_repourl_none": "参数 repoUrl 不能为空",
        "info_temp_create_directory": "创建临时目录(.temp)，请在 Git 中忽略此目录：%v",
        "info_temp_created_docker_compose": "在临时目录中写入 docker-compose 文件：%v",
        "info_temp_created_config": "在临时目录中写入 SmartIDE 配置文件：%v",
        "info_table_header_containers": "Service\tState\tImage\tPorts\t",
        "err_password_none": "密码不能为空！",
        "err_dal_record_repeat": "工作区(Workspace)数据重复",
        "err_dal_update_fail": "工作区(Workspace)更新失败",
        "err_dal_update_count_too_much": "工作区(Workspace)更新条目 > 1",
        "err_ernum_error": "在枚举中找不到对应的值",
        "err_ssh_password_required": "密码不能为空！",
        "err_git_env_check": "请检查当前环境的 git 是否正常",
        "warn_dal_record_not_exit_condition": "根据（%v）没有查询到对应的数据",
        "warn_dal_record_not_exit": "没有查询到对应的数据",
        "warn_param_is_null": "参数 %v 为空"
    }
}