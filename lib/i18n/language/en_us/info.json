{
    "config": {
        "info": {
            "read_docker_compose": "Read docker-compose file:"
        },
        "error": {
            "services_not_exit": "Docker-compose mode requires services",
            "file_not_exit": "%v file does not exist",
            "devcontainer_not_contains": "The \"%s\" defined in the dev-container node does not appear in services",
            "gitconfig_not_exit": "Note: User git configuration not obtained"
        }
    },
    "start": {
        "info": {
            "help_short": "Use your local machine to run SmartIDE dev environment",
            "help_long": "Use your local machine to run SmartIDE dev environment",
            "info_start": "SmartIDE Local Mode is starting up ...",
            "info_running_container": "[Docker] Creating dev containers ...",
            "info_running_openbrower": "[WebIDE] Opening brower ....",
            "info_end": "SmartIDE Local Mode started successfully.",
            "info_docker_compose_filepath": "[Docker-Compose] Using docker-compose file from : %v",
            "info_ssh_tunnel": "[SSH] Port forwarding : %v",
            "info_create_network": "[Docker] Creating  network %v",
            "info_open_in_brower": "[WebIDE] You can now open your browser to access the WebIDE :",
            "help_flag_filepath": "Specify a YAML file as the configuration."
        },
        "error": {
            "docker_err": "Please check whether docker is installed in the current environment",
            "dockerps_err": "Please check whether docker in the current environment works normally",
            "docker_compose_err": "Please check whether docker-compose in the current environment works normally",
            "docker_started": "The container has been started!",
            "docker_compose_save": "Error saving docker-compose file:"
        }
    },
    "stop": {
        "info": {
            "help_short": "Stop the SmartIDE dev environment",
            "help_long": "Stop the SmartIDE dev environment",
            "info_start": "SmartIDE dev environment is stoping ...",
            "info_end": "SmartIDE dev environment stopped",
            "help_flag_filepath": "Specify a YAML file as the configuration."
        },
        "error": {}
    },
    "remove": {
        "info": {
            "help_short": "Remove the SmartIDE dev environment completely",
            "help_long": "Remove the SmartIDE dev environment completely",
            "info_start": "Deleting environment ...",
            "info_end": "SmartIDE dev environment deleted",
            "help_flag_filepath": "Specify a YAML file as the configuration.h"
        },
        "error": {
            "docker_err": "请检查当前环境docker是否安装",
            "dockerps_err": "请检查当前环境docker是否正常运行",
            "docker_compose_err": "请检查当前环境docker-compose是否正常运行",
            "docker_started": "容器已经启动！",
            "docker_compose_save": "保存docker-compose文件出错："
        }
    },   
    "restart": {
        "info": {
            "help_short": "Restart the SmartIDE dev environment",
            "help_long": "Restart the SmartIDE dev environment",
            "help_flag_filepath": "指定yaml文件路径"
        },
        "error": {}
    },
    "new": {
        "info": {
            "help_short": "新建一个SmartIDE开发环境",
            "help_long": "新建一个SmartIDE开发环境",
            "help_info": "SmartIDE开发环境模版",
            "help_info_operation": "选项：",
            "help_flag_type": "指定项目类型",
            "help_flag_projectFolder": "要放置生成的输出的位置",
            "info_yaml_exist": "当前文件夹存在.ide.yaml文件",
            "info_noempty_is_comfirm": "文件夹不为空，是否确认创建（y/n）？"
        },
        "error": {}
    },
    "main": {
        "info": {
            "help_short": "SmartIDE CLI",
            "help_long": "SmartIDE CLI allows you to create local and remote dev environment with integrated WebIDE.",
            "usage_template": "Usage:{{if .Runnable}}\n  {{.UseLine}}{{end}}{{if .HasAvailableSubCommands}}\n  {{.CommandPath}} [command]{{end}}{{if gt (len .Aliases) 0}}\nAliases:\n  {{.NameAndAliases}}{{end}}{{if .HasExample}}\nExamples:\n{{.Example}}{{end}}{{if .HasAvailableSubCommands}}\nAvailable Commands:{{range .Commands}}{{if (or .IsAvailableCommand (eq .Name \"help\"))}}\n  {{rpad .Name .NamePadding }} {{.Short}}{{end}}{{end}}{{end}}{{if .HasAvailableLocalFlags}}\nFlags:\n{{.LocalFlags.FlagUsages | trimTrailingWhitespaces}}{{end}}{{if .HasAvailableInheritedFlags}}\nGlobal Flags:\n{{.InheritedFlags.FlagUsages | trimTrailingWhitespaces}}{{end}}{{if .HasHelpSubCommands}}\nAdditional help topics:{{range .Commands}}{{if .IsAdditionalHelpTopicCommand}}\n  {{rpad .CommandPath .CommandPathPadding}} {{.Short}}{{end}}{{end}}{{end}}{{if .HasAvailableSubCommands}}\nUse \"{{.CommandPath}} [command] --help\" for more information about a command.{{end}}\n",
            "help_flag_debug": "Whether to enable the Debug mode. In this mode, more log information is displayed"
        },
        "error": {
            "file_not_exit": "The configuration file does not exist. Please manually create \".ide/.ide.yaml\" in the current directory.",
            "version_not_build": "Please generate version number through pipeline!"
        }
    },
    "init": {
        "info": {
            "help_short": "Quickly initialize SmartIDE configuration file",
            "help_long": "",
            "info_start": "SmartIDE initialization......",
            "info_end": "SmartIDE initialization completed"
        },
        "error": {}
    },
    "help": {
        "info": {
            "help_short": "SmartIDE help",
            "help_long": "For example, SmartIDE start --help"
        },
        "error": {}
    },
    "version": {
        "info": {
            "help_short": "Viewing version Information",
            "help_long": "Viewing version Information",
            "template": "Version number: %v\n Build number: %v\n Commit record: %v\n Company: %v"
        },
        "error": {}
    },
    "vm_start": {
        "info": {
            "help_short": "Use a remote host to run SmartIDE dev environment",
            "help_long": "Use a remote host to run SmartIDE dev environment",
            "info_starting": "SmartIDE VM Mode is starting up...",
            "info_connect_remote": "[SSH] Connecting to a remote host",
            "info_git_clone": "[Git] Running git clone on your RepoUrl ...",
            "info_git_checkout_and_pull": "[Git] Running git checkout && pull ...",
            "info_read_config": "[Config] Use the the configuration file in your repo : %v",
            "info_create_network": "[Docker] Creating a docker network ...",
            "info_compose_up": "[Docker-Compose] Runing docker-compose up command ...",
            "info_warting_for_webide": "[WebIDE] Waiting for WebIDE to start ...",
            "info_open_brower": "[WebIDE] You can now open your browser to access the WebIDE : %v "
        },
        "error": {}
    },
    "update": {
        "info": {
            "help_short": "Automatically upgrade or update to a specified version",
            "help_long": "Automatically upgrade or update to a specified version",
            "info_remove_repeat": "Delete duplicate files locally",
            "help_flag_version": "Updates to the specified version",
            "help_flag_build": "Whether to update the build version"
        },
        "error": {},
        "warn": {
            "warn_rel_lastest": "The current version %v does not need to be upgraded"
        }
    },
    "host": {
        "info": {
            "help_short": "",
            "help_long": "",
            "help_get_short": "",
            "help_get_long": "",
            "help_list_short": "",
            "help_list_long": "",
            "info_host_table_header": "ID\t服务器地址\t端口\t创建时间",
            "info_host_detail_template": "      ID：\t%v\n地    址：\t%v\n验证模式：\t%v\n用    户：\t%v\n创建时间：\t%v\n",
            "help_flag_hostid": "远程服务器ID"
        },
        "error": {}
    },
    "common": {
        "debug": {
            "debug_key_public": "Local public key:",
            "debug_same_not_overwrite": "SSH private key is the same, do not need to overwrite!",
            "debug_auto_connect_gitrepo": "Automatically determine the connection to Git repositories",
            "debug_empty_error": "SSH command output error (error, output are empty), skipped!",
            "info_port_is_binding": "Port %v is bound and can be used directly",
            "info_port_binding_result2": "Container: %v -> localhost:%v  ( %v used)",
            "info_port_binding_result": "Container: %v -> localhost:%v  ",
            "info_find_new_port": "Discovering a new port:"
        },
        "info": {
            "info_privatekey_is_overwrite": "The SSH private key file already exists. Overwrite it (y/n).?",
            "info_whether_overwrite": "In SSH mode, whether to copy the local private key to the server （y/n）?",
            "info_gitrepo_cloned": "Git repo cloned!",
            "info_please_enter_password": "Please enter the current git repository access password:",
            "info_canel_privatekey_password": "The remote server needs to cancel the private key password, please enter the private key password:",
            "info_port_is_binding": "Port %v is bound and can be used directly",
            "info_port_binding_result2": "Container: %v -> localhost:%v  ( %v used)",
            "info_port_binding_result": "Container: %v -> localhost:%v  ",
            "info_find_new_port": "Discovering a new port:",
            "info_webide_host_port": "WebIDE 绑定端口：%v",
            "info_ssh_host_port": "SSH 绑定端口：%v",
            "info_create_directory": "创建目录：%v",
            "info_temp_created_docker_compose": "写入docker-compose文件：%v",
            "info_temp_created_config": "写入配置文件：%v",
            "info_table_header_containers": "Service\tState\tImage\tPorts\t"
        },
        "error": {
            "err_sshremote_param_repourl_none": "The gitRepoUrl argument cannot be empty",
            "err_password_none": "Password cannot be empty!",
            "err_dal_record_repeat": "数据重复",
            "err_dal_update_fail": "更新失败",
            "err_dal_update_count_too_much": "更新条目 > 1",
            "err_ernum_error": "在枚举中找不到对应的值"
        },
        "warn": {
            "warn_dal_record_not_exit_condition": "根据（%v）没有查询到对应的数据",
            "warn_dal_record_not_exit": "没有查询到对应的数据",
            "warn_param_is_null": "参数 %v 为空"
        }
    }
}